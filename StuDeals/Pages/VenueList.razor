@page "/venuelist"

<PageTitle>Venues</PageTitle>

@using StuDeals.Classes

<h1>Venues</h1>

<p>A list of all the venues in the database.</p>

@if (venues == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Description</th>
                <th>Location</th>
                <th>Image Link</th>
                @if (Account.CurrentAccount != null && Account.CurrentAccount.Type == Account.AccountType.Mod)
                {
                    <th></th>
                }

            </tr>
        </thead>
        <tbody>
            @foreach (var venue in venues)
            {

                <tr>
                    <td>@venue.ID</td>
                    <NavLink class="nav-link" href="@($"venue/{venue.ID}")">
                        <td>@venue.Name</td>
                    </NavLink>

                    <td>@venue.Description</td>
                    <td>@venue.Location</td>
                    <td>@venue.ImageLink</td>
                    @if (Account.CurrentAccount != null && Account.CurrentAccount.Type == Account.AccountType.Mod)
                    {
                        <td><button class="btn btn-primary" @onclick="() => DeleteVenue(venue)">Delete</button></td>
                    }
                </tr>
            }
        </tbody>
    </table>

    <p>
        Enter Tag:
        <input @bind="_Tag" />
    </p>

    <button class="btn btn-primary" @onclick="AddTags">Add A Tag</button> <p>@_Response</p>
}

@code {
    private List<Venue>? venues;
    private String _Tag = "Tag";
    private string _Response = "";
    private List<string> _Tags = new List<string>();
    private bool _FirstTag = true;
    private string filteredBy = "";

    protected override async Task OnInitializedAsync()
    {
        Venue[] venueList = await Task.Factory.StartNew(() => DataLayer.Instance.GetVenues());
        venues = new List<Venue>(venueList);
    }

    private void DeleteVenue(Venue pVenue)
    {
        DataLayer.Instance.DeleteVenue(pVenue.ID);
        venues.Remove(pVenue);
    }

    private void AddTags()
    {
        _Tags.Add(_Tag);
        _Response = "Applying tags...";
        DataLayer.Instance.GetVenuesWithTags(_Tags);

        if (_FirstTag == true)
        {
            filteredBy = _Tag;
        }
        else
        {
            filteredBy = filteredBy + ", " + _Tag;
        }
        _FirstTag = false;

        _Response = "Applied tags: " + filteredBy;
    }
}